apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: homates
  name: eureka-service  #nome deployment
spec:
  serviceName: eureka-service
  replicas: 1 #repliche dell'eureka-service in caso di rottura
  selector:
    matchLabels:
      app: eureka-service
  template:
    metadata:
      labels:
        app: eureka-service
    spec:
      containers:
        - name: eureka-service #pod nel deployment 
          image: ivsnp/homates-eureka:1.0.0
          imagePullPolicy: Always
          env:
            - name: EUREKA_DZ
              value: "http://eureka-service-0.eureka-service:8761/eureka"
            - name: EUREKA_HOSTNAME
              value: "eureka-service"
          ports:
            - containerPort: 8761 #porta in cui esce il pod ossia il container
          resources:
            requests:
              cpu: "100m"
              memory: "250Mi"
            limits:
              cpu: "200m"
              memory: "300Mi"
---
# service
apiVersion: v1
kind: Service
metadata:
  namespace: homates
  name: eureka-service
spec:
  clusterIP: None
  selector:
    app: eureka-service
  ports:
    - port: 8761
      targetPort: 8761
  type: ClusterIP

---
# ingress creation (permette di associare un dns a un service e renderlo pubblico
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: homates
  name: eureka-homates
spec:
  rules:
    - host: eureka.homates.it
      http:
        paths:
          - backend:
              service:
                name: eureka-service
                port:
                  number: 8761
            path: /
            pathType: Prefix
