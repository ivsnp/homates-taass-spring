# persistent volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: shopl-pv-volume
  labels:
    app: shopping-list-postgres
spec:
  capacity:
    storage: 200Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/lib/postgresql/data"

---
# persistent volume claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shopl-pv-claim
  labels:
    app: shopping-list-postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: homates
  name: shopping-list-postgres  #nome deployment
  labels:
    app: shopping-list-postgres
spec:
  serviceName: shopping-list-postgres
  replicas: 1 #repliche dell'eureka-service in caso di rottura
  selector:
    matchLabels:
      app: shopping-list-postgres
  template:
    metadata:
      labels:
        app: shopping-list-postgres
    spec:
      containers:
        - name: shopping-list-postgres #pod nel deployment
          image: postgres:latest
          imagePullPolicy: Always
          env:
            - name: POSTGRES_DB
              value: "homates-shopping-list"
            - name: POSTGRES_USER
              value: "homates"
            - name: POSTGRES_PASSWORD
              value: "admin"
          ports:
            - containerPort: 5432 #porta in cui esce il pod ossia il container
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: shopl-pv-storage
          resources:
            requests:
              cpu: "100m"
              memory: "250Mi"
            limits:
              cpu: "200m"
              memory: "300Mi"
      volumes:
        - name: shopl-pv-storage
          persistentVolumeClaim:
            claimName: shopl-pv-claim
---
# service
apiVersion: v1
kind: Service
metadata:
  namespace: homates
  name: shopping-list-postgres
spec:
  clusterIP: None
  selector:
    app: shopping-list-postgres
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP